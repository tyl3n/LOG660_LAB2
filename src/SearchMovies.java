/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.event.ActionEvent;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import org.hibernate.Session;

/**
 *
 * @author jeanym
 */
public class SearchMovies extends javax.swing.JFrame {
	Session session;
	Systemuser thisLogin;
	ArrayList<BigDecimal> listIDFilm = new ArrayList<BigDecimal>();
	DefaultTableModel movieInfoTableModel = new DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "Title", "ReleaseYear", "Director"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class,java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        };
	
    /**
     * Creates new form SearchMovies
     */
    SearchMovies sm;
    public SearchMovies(Session session, Systemuser Login) {
        initComponents();
        sm = this;
        sm.setVisible(true);
        this.session = session;
        this.thisLogin = Login;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        titleTextField = new javax.swing.JTextField();
        yearFromTextField = new javax.swing.JTextField();
        countryTextField = new javax.swing.JTextField();
        actorTextField = new javax.swing.JTextField();
        yearToTextField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        writerTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        langTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        directorTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        moviesTable = new javax.swing.JTable();
        genreTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        actorTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actorTextFieldActionPerformed(evt);
            }
        });
        
        searchButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(ActionEvent e) {
				MovieInfoBroker movieInfoBroker = new MovieInfoBroker(session);
				String[] titleKeywords = titleTextField.getText().trim().isEmpty() ? null : titleTextField.getText().trim().split(" +");
				String[] countryKeywords = countryTextField.getText().trim().isEmpty() ? null : countryTextField.getText().trim().split(" +");
				String[] languageKeywords = langTextField.getText().trim().isEmpty() ? null : langTextField.getText().trim().split(" +");
				String[] genreKeywords = genreTextField.getText().trim().isEmpty() ? null : genreTextField.getText().trim().split(" +");
				String[] directorKeywords = directorTextField.getText().trim().isEmpty() ? null : directorTextField.getText().trim().split(" +");
				String[] actorKeywords = actorTextField.getText().trim().isEmpty() ? null : actorTextField.getText().trim().split(" +");
				Integer minYear;
				Integer maxYear;
				
				try {
					minYear = Integer.parseInt(yearFromTextField.getText());
					System.out.println(minYear);
				} catch (NumberFormatException err) {
					minYear = null;
				}
				
				try {
					maxYear = Integer.parseInt(yearToTextField.getText());
				} catch (NumberFormatException err) {
					maxYear = null;
				}
				
				Movie[] movies = movieInfoBroker.getMoviesFromCriteria(titleKeywords, countryKeywords, languageKeywords, genreKeywords, directorKeywords, actorKeywords, minYear, maxYear);

				for (int i = 0; i < movieInfoTableModel.getRowCount(); i++) {
					movieInfoTableModel.removeRow(i);
				}
				
				listIDFilm.clear();

				movieInfoTableModel.setRowCount(0);

				for (Movie movie : movies) {
					Object[] rowData = {movie.getTitle(), movie.getReleaseyear(), movie.getCrewmember().getFirstname() + ' ' + movie.getCrewmember().getLastname()};
					movieInfoTableModel.addRow(rowData);
					listIDFilm.add(movie.getMovieid());
				}
			}
        });

        searchButton.setText("Search");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel1.setText("Search for movies");

        jLabel2.setText("By titles");

        jLabel3.setText("By release year from");

        jLabel4.setText("Country");

        jLabel5.setText("Genre");

        jLabel6.setText("By release year to");

        jLabel7.setText("Actor");

        jLabel8.setText("Scriptwriter");

        jLabel9.setText("Language");

        jLabel10.setText("Director");

        
        
        moviesTable.setModel(movieInfoTableModel);
        
        moviesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                moviesTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(moviesTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 638, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 1, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(searchButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(countryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(titleTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                                        .addComponent(yearFromTextField)))
                                .addGap(53, 53, 53)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)))
                            .addComponent(jLabel1))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(actorTextField)
                            .addComponent(yearToTextField)
                            .addComponent(genreTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(directorTextField)
                            .addComponent(langTextField)
                            .addComponent(writerTextField))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(titleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addComponent(writerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(genreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yearFromTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yearToTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(langTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(countryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(actorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addComponent(directorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchButton)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void actorTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actorTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_actorTextFieldActionPerformed

    private void moviesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moviesTableMouseClicked
        // TODO add your handling code here:
        
        if (evt.getClickCount() == 2) {
           JTable target = (JTable)evt.getSource();
           int row = target.getSelectedRow();
           BigDecimal movieId =listIDFilm.get(row);
           new ShowMovie(this,session,movieId, thisLogin);
           this.setVisible(false);
           //sm.setVisible(false);
           //dispose();
        }
    }//GEN-LAST:event_moviesTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField actorTextField;
    private javax.swing.JTextField countryTextField;
    private javax.swing.JTextField directorTextField;
    private javax.swing.JTextField genreTextField;
    private javax.swing.JButton searchButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField langTextField;
    private javax.swing.JTable moviesTable;
    private javax.swing.JTextField titleTextField;
    private javax.swing.JTextField writerTextField;
    private javax.swing.JTextField yearFromTextField;
    private javax.swing.JTextField yearToTextField;
    // End of variables declaration//GEN-END:variables
}
